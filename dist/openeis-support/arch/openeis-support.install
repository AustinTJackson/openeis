post_install() {
  if ! getent group openeis >/dev/null; then
    groupadd --system openeis >/dev/null
    echo '>> created openeis group'
  fi

  if ! getent passwd openeis >/dev/null; then
    useradd --home-dir /var/lib/openeis --gid openeis \
      --shell /bin/false --system openeis >/dev/null
    echo '>> created openeis user'
  fi

  chgrp openeis /var/lib/openeis
  chown openeis:http /var/{run,log}/openeis

  cd /etc/openeis
  if [[ ! -f settings.d/10-secret_key.py ]]; then
    (umask 137 && echo -E "SECRET_KEY = r'$(tr -dc '[:graph:]' < /dev/urandom | tr -d "\\\\'" | head -c 50)'" > settings.d/10-secret_key.py)
    chgrp openeis settings.d/10-secret_key.py
  fi

  names="$(hostname --fqdn)"
  [[ -n "$names" ]] || names="www.example.com"

  if [[ ! -e server.conf ]]; then
    echo "server_name $names;" > server.conf
  fi

  if [[ ! -e default.crt ]]; then
    subject=""
    for name in $names; do
      subject="$subject/CN=$name"
    done
    (umask 137 && openssl req -x509 -nodes -days 1825 -newkey rsa:2048 -keyout default.key -out default.crt -subj "$subject")
  fi

  if [[ ! -e openeis.key ]]; then
    ln -snf default.key openeis.key
    ln -snf default.crt openeis.crt
  fi
  
  if sudo -H -u postgres createuser --no-createdb --no-createrole --no-superuser --no-password openeis; then
    sudo -H -u postgres createdb --owner openeis --no-password openeis || true
  else
    echo '>> Start postgresql and create the openeis database:'
    echo '   sudo systemctl start postgresql.service'
    echo '   sudo -H -u postgres createuser --no-createdb --no-createrole \'
    echo '     --no-superuser --no-password openeis'
    echo '   sudo -H -u postgres createdb --owner openeis --no-password openeis'
  fi
}

post_upgrade() {
  post_install $1
}

pre_remove() {
  systemctl stop openeis.service >/dev/null 2>/dev/null || :
}

post_remove() {
  cd /etc/openeis
  [[ ! openeis.key -ef default.key ]] || rm -f openeis.key
  [[ ! openeis.crt -ef default.crt ]] || rm -f openeis.crt
  rm -f default.{key,crt} settings.d/10-secret_key.py
  rmdir --ignore-fail-on-non-empty /var/{lib,log,run}/openeis
  echo '>> Drop the database and user with the following commands:'
  echo '   sudo -H -u postgres dropdb openeis'
  echo '   sudo -H -u postgres dropuser openeis'
  echo '>> Run the following commands to remove the openeis user and group:'
  echo '   sudo userdel openeis'
  echo '   sudo groupdel openeis'
}

# vim:set sts=2 ts=2 sw=2 et:
