# Create the same number of worker processes as there are CPU cores.
worker_processes {{ worker_processes|default:"auto" }};

# the upstream component nginx needs to connect to
upstream django {
    server unix://{{ socket|default:"/tmp/uwsgi.sock" }};
}

# configuration of the server
server {
    # the port your site will be served on
    listen      {{ http_port|default:"80" }};
    {% if not no_https %}
    listen      {{ https_port|default:"443" }} ssl;
    {% endif %}

    {% with host=settings.ALLOWED_HOSTS.0|default:"example.com" %}
    # the domain name it will serve for
    server_name          {{ host }};
    {% if not no_https %}
    ssl_certificate      {{ host }}.crt;
    ssl_certificate_key  {{ host }}.key;
    {% endif %}
    {% endwith %}
    charset     utf-8;

    # max upload size
    client_max_body_size 100M;

    {% if settings.MEDIA_URL and settings.MEDIA_ROOT %}
    # Django media
    location {{ settings.MEDIA_URL }}  {
        alias {{ settings.MEDIA_ROOT }};
    }
    {% endif %}

    {% if settings.STATIC_URL and settings.STATIC_ROOT %}
    # Django static files
    location {{ settings.STATIC_URL }} {
        alias {{ settings.STATIC_ROOT }};
    }
    {% endif %}

    {% if settings.PROTECTED_MEDIA_URL and settings.PROTECTED_MEDIA_ROOT %}
    # OpenEIS protected media
    location {{ settings.PROTECTED_MEDIA_URL }} {
        internal;  # Protected media -- access must be authorized by Django.
        alias {{ settings.PROTECTED_MEDIA_ROOT }};
    }
    {% endif %}

    # Finally, send all non-media requests to the Django server.
    location {{ server_root|default:"/" }} {
        uwsgi_pass  django;
        include     uwsgi_params;
    }
}


