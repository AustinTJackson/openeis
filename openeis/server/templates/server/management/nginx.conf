{% autoescape off %}
# the upstream component nginx needs to connect to
upstream django {
    server unix://{{ socket|default:"/var/run/openeis/uwsgi.sock" }};
}

# configuration of the server
server {
    # the port your site will be served on
    listen      {{ http_port|default:"80" }};
    {% if not no_https %}
    listen      {{ https_port|default:"443" }} ssl;
    {% endif %}

    # the domain name it will serve for
    server_name         {% for host in settings.ALLOWED_HOSTS %} {{ host }}{% empty %} example.com{% endfor %};
    {% if not no_https %}
    {% with host=settings.ALLOWED_HOSTS.0|default:"example.com" %}
    ssl_certificate      {{ host }}.crt;
    ssl_certificate_key  {{ host }}.key;
    {% endwith %}
    {% endif %}
    charset     utf-8;

    # max upload size
    client_max_body_size 100M;

    {% if settings.MEDIA_URL and settings.MEDIA_ROOT %}
    # Django media
    location ^~ {{ server_root }}{{ settings.MEDIA_URL }}  {
        alias {{ settings.MEDIA_ROOT }}/;
    }
    {% endif %}

    {% if settings.STATIC_URL and settings.STATIC_ROOT %}
    # Django static files
    location ^~ {{ server_root }}{{ settings.STATIC_URL }} {
        alias {{ settings.STATIC_ROOT }}/;
    }
    {% endif %}

    {% if settings.PROTECTED_MEDIA_URL and settings.PROTECTED_MEDIA_ROOT %}
    # OpenEIS protected media
    location ^~ {{ server_root }}{{ settings.PROTECTED_MEDIA_URL }} {
        internal;  # Protected media -- access must be authorized by Django.
        alias {{ settings.PROTECTED_MEDIA_ROOT }}/;
    }
    {% endif %}

    # Finally, send all non-media requests to the Django server.
    location {{ server_root }}/ {
        # Rewrite static UI to openeis-ui
        rewrite ^{{ server_root }}/(index.html)?$ {{ server_root }}/static/openeis-ui/index.html last;
        rewrite ^{{ server_root }}/((css|js)(/.*)?)$ {{ server_root }}/static/openeis-ui/$1 last;

        uwsgi_pass  django;
        include     uwsgi_params;
    }
}
{% endautoescape %}
